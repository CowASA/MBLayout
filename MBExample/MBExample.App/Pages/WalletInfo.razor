@page "/wallet"
@page "/wallet/{AccountId}"
@using MBExample.App.Shared.Models
@using MBExample.App.Components
@using MBExample.App.Components.Layouts

<style>
    .grid-layout {
        /*display arrangement*/
        display: grid;
        height: 100vh;
        grid-template-columns: 20px 20px 20px;
        grid-auto-rows: 20px 20px 20px;
        justify-self: center;
    }
    .arrow {
        place-self: center;
    }
    .dot {
        place-self: center;
    }
</style>


@*Container for wallet address text box*@
<MudContainer Class="mt-16" MaxWidth="MaxWidth.False">

	@*TODO: Make Textbox a component*@
	<MudGrid Spacing="2">
		<MudTextField Class="mr-4" T="string" Counter="58" MaxLength="58" HelperText="Algorand wallet addresses are 58 characters"
					  Immediate="false" Validation="@(new Func<string, IEnumerable<string>>(MaxCharacters))"
					  Label="@TextInputLabel" Variant="Variant.Outlined" Margin="Margin.Dense" @bind-Value="@AccountId"/>
		<div class="col-10">
			<MudButton Class="mt-2" Variant="Variant.Filled" Size="Size.Small" OnClick="SubmitInfo">Submit</MudButton>
		</div>
	</MudGrid>
</MudContainer>

@*@if (AccountId is not null)
{
	<AccountInfoPage AccountId="@AccountId"/>
}
else
{
	<MudContainer Class="mt-16" MaxWidth="MaxWidth.False">
		<WaitingForEntry />
	</MudContainer>
}*@

<MudGrid Class="pa-2">
    <MudItem xs="12">
        <MudSlider Min="1" Max="@_maxCards" Immediate="true" Step="1" @bind-Value="cards"></MudSlider>
    </MudItem>

    <MudItem xs="12">
        <MudSelect Label="Justify" T="Justify" @bind-Value="justification">
            <MudSelectItem Value="Justify.FlexStart">Flex Start</MudSelectItem>
            <MudSelectItem Value="Justify.FlexEnd">Flex End</MudSelectItem>
            <MudSelectItem Value="Justify.Center">Center</MudSelectItem>
            <MudSelectItem Value="Justify.SpaceAround">Space Around</MudSelectItem>
            <MudSelectItem Value="Justify.SpaceBetween">Space Between</MudSelectItem>
            <MudSelectItem Value="Justify.SpaceEvenly">Space Evenly</MudSelectItem>
        </MudSelect>
    </MudItem>

    <MudItem xs="12">
        <MudGrid Justify="justification">
            @for (int i = 0; i < cards; i++)
            {
                int localindex = i;
                
                <MudItem xs="@breaks[localindex]" Style="@heights[localindex]" >
                    <MudCard Style="height: 100%; overflow-y: scroll; padding: 10px" Outlined="true">
                        <MudCardHeader>
                            <CardHeaderContent>

                                <MudSelect Label="@Words" T="string" @bind-Value="Words">
                                    <MudSelectItem Value="Words">Asset Count</MudSelectItem>
                                    <MudSelectItem Value="Things">Recent Buys</MudSelectItem>
                                </MudSelect>

                            </CardHeaderContent>
                            <CardHeaderActions>
                                <MudItem>
                                    <div class="grid-layout">
                                        <div></div>
                                        <div class="arrow"><MudIconButton Icon="@Icons.Material.Filled.KeyboardArrowUp" Color="Color.Default" Size="Size.Small" OnClick="(()=>UpdateHeight(localindex,-20))"/></div>  
                                        <div></div>
                                        <div class="arrow"><MudIconButton Icon="@Icons.Material.Filled.KeyboardArrowLeft" Color="Color.Default" Size="Size.Small" OnClick="(()=>UpdateBreaks(localindex,-1))"/></div>  
                                        <div class="dot"><MudIconButton Icon="@Icons.Material.Filled.Cancel" Color="Color.Error" Size="Size.Small" /></div>
                                        <div class="arrow"><MudIconButton Icon="@Icons.Material.Filled.KeyboardArrowRight" Color="Color.Default" Size="Size.Small" OnClick="(()=>UpdateBreaks(localindex,1))"/></div>  
                                        <div></div>  
                                        <div class="arrow"><MudIconButton Icon="@Icons.Material.Filled.KeyboardArrowDown" Color="Color.Default" Size="Size.Small" OnClick="(()=>UpdateHeight(localindex,20))"/></div>  
                                        <div></div>  
                                    </div>
                                </MudItem>
                            </CardHeaderActions>
                        </MudCardHeader>
                        <MudCardContent>
                                <DynamicComponent Type="@components[localindex]" />
                        </MudCardContent>

                    </MudCard>
                </MudItem>
             }
        </MudGrid>
    </MudItem>
</MudGrid>